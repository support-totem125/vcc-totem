"""
Generaci√≥n y manejo de mensajes personalizados
"""

import textwrap

def generar_mensaje_personalizado(estado, datos=None, mensaje_error=None):
    """
    Generar mensaje personalizado seg√∫n el resultado de la consulta
    
    Args:
        estado: 'success', 'error'
        datos: Datos del cliente (si existe)
        mensaje_error: Mensaje de error de la API
    
    Returns:
        Tupla (mensaje_completo, tiene_oferta)
    """
    
    if estado == 'success' and datos and datos.get('tieneLineaCredito'):
        # Cliente CON l√≠nea de cr√©dito - √öNICA CONDICI√ìN PARA OFERTA
        nombre = datos.get('nombre', 'Cliente')
        monto = datos.get('lineaCredito', 0)
        
        mensaje_completo = textwrap.dedent(f"""
            üéâ ¬°FELICITACIONES!
                                           
            Hola {nombre},
            ¬°Tenemos excelentes noticias para ti!
                                           
            Tienes una l√≠nea de cr√©dito APROBADA por:
            üí∞ S/ {monto:,.2f} soles !!!
                                           
        """).strip()
        
        return mensaje_completo, True
    
    elif estado == 'success' and datos and not datos.get('tieneLineaCredito'):
        # Cliente registrado pero SIN l√≠nea de cr√©dito
        nombre = datos.get('nombre', 'Cliente')
        
        mensaje_completo = textwrap.dedent(f"""
            ‚ÑπÔ∏è INFORMACI√ìN DE TU CONSULTA
                                           
            Hola {nombre},
            Gracias por tu inter√©s en nuestros servicios de cr√©dito.
            En este momento no cuentas con una l√≠nea de cr√©dito disponible.
                                           
            üí° ¬øC√≥mo puedo calificar?
               ‚Ä¢ Mant√©n tus pagos al d√≠a
               ‚Ä¢ Contin√∫a usando nuestro servicio regularmente
               ‚Ä¢ Evaluamos peri√≥dicamente a nuestros clientes
                                           
            Sigue usando el servicio de Calidda y muy pronto podr√≠as calificar 
            para una oferta crediticia.
                                           
            ¬°Hasta luego!
        """).strip()
        
        return mensaje_completo, False

    elif estado == 'dni_invalido' or (mensaje_error and ('no encontrado' in mensaje_error.lower() or 'no califica' in mensaje_error.lower() or 'no tiene campa√±a' in mensaje_error.lower())):
        # DNI no encontrado o sin campa√±a activa
        mensaje_completo = textwrap.dedent("""
            ‚ÑπÔ∏è INFORMACI√ìN DE TU CONSULTA
                                           
            Gracias por tu inter√©s en nuestros servicios de cr√©dito.
            En este momento no cuentas con una l√≠nea de cr√©dito disponible.
                                           
            üí° ¬øC√≥mo puedo calificar?
               ‚Ä¢ Mant√©n tus pagos al d√≠a
               ‚Ä¢ Contin√∫a usando nuestro servicio regularmente
               ‚Ä¢ Evaluamos peri√≥dicamente a nuestros clientes
                                           
            Sigue usando el servicio de Calidda y muy pronto podr√≠as calificar 
            para una oferta crediticia.
                                           
            ¬°Hasta luego!
        """).strip()
        
        return mensaje_completo, False
    
    else:
        # Error gen√©rico u otro caso (incluyendo timeout)
        mensaje_completo = textwrap.dedent("""
            ‚ö†Ô∏è INFORMACI√ìN
                                           
            Hola Cliente,
            En este momento no podemos procesar tu consulta.
                                           
            ¬°Gracias por tu comprensi√≥n!
        """).strip()
        
        return mensaje_completo, False

def determinar_estado_consulta(data, estado, mensaje_api):
    """Determinar el estado de la consulta para mensaje personalizado"""
    
    if estado == 'success' and data:
        if data.get('tieneLineaCredito'):
            return 'success'
        else:
            return 'sin_credito'
    
    elif estado.startswith('invalid:'):
        mensaje = estado.split('invalid:', 1)[1].strip().lower()
        
        if 'no encontrado' in mensaje or 'no existe' in mensaje:
            return 'dni_invalido'
        else:
            return 'error'
    
    else:
        return 'error'

def mostrar_resultado(dni, data, estado='success', mensaje_api=None):
    """Mostrar resultado en consola con mensaje personalizado"""
    
    # Determinar estado y generar mensaje
    estado_consulta = determinar_estado_consulta(data, estado, mensaje_api)
    mensaje_completo, tiene_oferta = generar_mensaje_personalizado(
        estado_consulta, 
        data, 
        mensaje_api
    )
    
    # ========== DETERMINAR ESTADO DEL DNI ==========
    if data and data.get('id'):
        # DNI existe en el sistema (tiene ID de cliente)
        if data.get('tieneLineaCredito'):
            estado_dni = "‚úÖ DNI V√ÅLIDO - CON OFERTA"
        else:
            estado_dni = "‚ö†Ô∏è DNI V√ÅLIDO - SIN OFERTA"
    else:
        # DNI no encontrado o inv√°lido
        estado_dni = "‚ùå DNI NO ENCONTRADO O INV√ÅLIDO"
    
    try:
        # Mostrar el mensaje personalizado completo
        print()
        print(mensaje_completo)
        print()
        
        return True, estado_dni, tiene_oferta  # ‚Üê Retornando tiene_oferta tambi√©n
        
    except Exception as e:
        return False, estado_dni, False  # ‚Üê Agregado False para tiene_oferta en caso de error

